# app/ml/online_learner.py
from river import linear_model, preprocessing, compose
import pickle

class OnlineLearner:
    def __init__(self, redis_client):
        self.redis = redis_client
        self.model_key = "ml:user_success_model"
        # Modeli Redis’ten yükle veya yeni oluştur
        try:
            model_bytes = self.redis.get(self.model_key)
            if model_bytes:
                self.model = pickle.loads(model_bytes)
            else:
                raise Exception()
        except:
            self.model = compose.Pipeline(
                preprocessing.StandardScaler(),
                linear_model.LogisticRegression()
            )

    def predict_success_probability(self, user_features: dict, question_features: dict) -> float:
        combined_features = {**user_features, **question_features}
        return self.model.predict_proba_one(combined_features).get(True, 0.5)

    def learn_from_answer(self, user_features: dict, question_features: dict, is_correct: bool, response_time: int):
        combined_features = {**user_features, **question_features, "response_time": response_time}
        self.model.learn_one(combined_features, is_correct)
        # Güncellenen modeli Redis’e kaydet
        model_bytes = pickle.dumps(self.model)
        self.redis.set(self.model_key, model_bytes) 