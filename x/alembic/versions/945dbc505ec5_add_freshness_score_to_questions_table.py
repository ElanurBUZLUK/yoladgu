"""Add freshness_score to questions table

Revision ID: 945dbc505ec5
Revises: create_embeddings_table
Create Date: 2025-08-20 17:05:48.001804

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '945dbc505ec5'
down_revision = 'create_embeddings_table'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('math_profiles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('global_skill', sa.Float(), nullable=False),
    sa.Column('difficulty_factor', sa.Float(), nullable=False),
    sa.Column('ema_accuracy', sa.Float(), nullable=False),
    sa.Column('ema_speed', sa.Float(), nullable=False),
    sa.Column('streak_right', sa.Integer(), nullable=False),
    sa.Column('streak_wrong', sa.Integer(), nullable=False),
    sa.Column('last_k_outcomes', sa.JSON(), nullable=False),
    sa.Column('srs_queue', sa.JSON(), nullable=False),
    sa.Column('bandit_arms', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.drop_index('ix_embeddings_created_at', table_name='embeddings')
    op.drop_index('ix_embeddings_deactivated_at', table_name='embeddings')
    op.drop_index('ix_embeddings_is_active', table_name='embeddings')
    op.drop_index('ix_embeddings_namespace', table_name='embeddings')
    op.drop_index('ix_embeddings_obj_ref', table_name='embeddings')
    op.drop_index('ix_embeddings_slot', table_name='embeddings')
    op.drop_index('uq_embeddings_ns_active_slot_one', table_name='embeddings')
    op.drop_table('embeddings')
    op.drop_index('ix_error_patterns_deactivated_at', table_name='error_patterns')
    op.drop_index('ix_error_patterns_namespace', table_name='error_patterns')
    op.drop_index('ix_error_patterns_slot', table_name='error_patterns')
    op.drop_constraint('uq_error_patterns_obj_ns_slot', 'error_patterns', type_='unique')
    op.drop_column('error_patterns', 'pattern_details')
    op.drop_column('error_patterns', 'embedding')
    op.drop_column('error_patterns', 'slot')
    op.drop_column('error_patterns', 'obj_ref')
    op.drop_column('error_patterns', 'deactivated_at')
    op.drop_column('error_patterns', 'embedding_dim')
    op.drop_column('error_patterns', 'namespace')
    op.add_column('questions', sa.Column('freshness_score', sa.Integer(), nullable=True))
    op.add_column('questions', sa.Column('last_seen_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('questions', sa.Column('quality_flags', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.drop_index('ix_questions_deactivated_at', table_name='questions')
    op.drop_index('ix_questions_is_active', table_name='questions')
    op.drop_index('ix_questions_namespace', table_name='questions')
    op.drop_index('ix_questions_slot', table_name='questions')
    op.drop_constraint('uq_questions_obj_ns_slot', 'questions', type_='unique')
    op.drop_column('questions', 'is_active')
    op.drop_column('questions', 'slot')
    op.drop_column('questions', 'obj_ref')
    op.drop_column('questions', 'deactivated_at')
    op.drop_column('questions', 'embedding_dim')
    op.drop_column('questions', 'namespace')
    op.drop_column('questions', 'content_embedding')
    op.drop_index('ix_users_math_profile_id', table_name='users')
    op.drop_column('users', 'thompson_alpha')
    op.drop_column('users', 'math_profile_id')
    op.drop_column('users', 'recovery_mode_active')
    op.drop_column('users', 'srs_mode_active')
    op.drop_column('users', 'thompson_beta')
    op.drop_column('users', 'global_skill')
    op.drop_column('users', 'last_selection_mode')
    op.drop_column('users', 'difficulty_factor')
    op.drop_column('users', 'epsilon')
    op.drop_column('users', 'last_k_outcomes')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('last_k_outcomes', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('epsilon', sa.DOUBLE_PRECISION(precision=53), server_default=sa.text("'0.1'::double precision"), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('difficulty_factor', sa.DOUBLE_PRECISION(precision=53), server_default=sa.text("'1'::double precision"), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('last_selection_mode', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('global_skill', sa.DOUBLE_PRECISION(precision=53), server_default=sa.text("'0.5'::double precision"), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('thompson_beta', sa.DOUBLE_PRECISION(precision=53), server_default=sa.text("'1'::double precision"), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('srs_mode_active', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('recovery_mode_active', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('math_profile_id', sa.UUID(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('thompson_alpha', sa.DOUBLE_PRECISION(precision=53), server_default=sa.text("'1'::double precision"), autoincrement=False, nullable=True))
    op.create_index('ix_users_math_profile_id', 'users', ['math_profile_id'], unique=False)
    op.add_column('questions', sa.Column('content_embedding', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('questions', sa.Column('namespace', sa.VARCHAR(length=100), server_default=sa.text("'default'::character varying"), autoincrement=False, nullable=True))
    op.add_column('questions', sa.Column('embedding_dim', sa.INTEGER(), server_default=sa.text('1536'), autoincrement=False, nullable=True))
    op.add_column('questions', sa.Column('deactivated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('questions', sa.Column('obj_ref', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('questions', sa.Column('slot', sa.INTEGER(), server_default=sa.text('1'), autoincrement=False, nullable=True))
    op.add_column('questions', sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False))
    op.create_unique_constraint('uq_questions_obj_ns_slot', 'questions', ['obj_ref', 'namespace', 'slot'])
    op.create_index('ix_questions_slot', 'questions', ['slot'], unique=False)
    op.create_index('ix_questions_namespace', 'questions', ['namespace'], unique=False)
    op.create_index('ix_questions_is_active', 'questions', ['is_active'], unique=False)
    op.create_index('ix_questions_deactivated_at', 'questions', ['deactivated_at'], unique=False)
    op.drop_column('questions', 'quality_flags')
    op.drop_column('questions', 'last_seen_at')
    op.drop_column('questions', 'freshness_score')
    op.add_column('error_patterns', sa.Column('namespace', sa.VARCHAR(length=100), server_default=sa.text("'default'::character varying"), autoincrement=False, nullable=True))
    op.add_column('error_patterns', sa.Column('embedding_dim', sa.INTEGER(), server_default=sa.text('1536'), autoincrement=False, nullable=True))
    op.add_column('error_patterns', sa.Column('deactivated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('error_patterns', sa.Column('obj_ref', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('error_patterns', sa.Column('slot', sa.INTEGER(), server_default=sa.text('1'), autoincrement=False, nullable=True))
    op.add_column('error_patterns', sa.Column('embedding', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('error_patterns', sa.Column('pattern_details', sa.TEXT(), autoincrement=False, nullable=True))
    op.create_unique_constraint('uq_error_patterns_obj_ns_slot', 'error_patterns', ['obj_ref', 'namespace', 'slot'])
    op.create_index('ix_error_patterns_slot', 'error_patterns', ['slot'], unique=False)
    op.create_index('ix_error_patterns_namespace', 'error_patterns', ['namespace'], unique=False)
    op.create_index('ix_error_patterns_deactivated_at', 'error_patterns', ['deactivated_at'], unique=False)
    op.create_table('embeddings',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('obj_ref', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('namespace', sa.VARCHAR(length=100), server_default=sa.text("'default'::character varying"), autoincrement=False, nullable=False),
    sa.Column('slot', sa.INTEGER(), server_default=sa.text('1'), autoincrement=False, nullable=False),
    sa.Column('embedding', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('meta', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('embedding_dim', sa.INTEGER(), server_default=sa.text('1536'), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('deactivated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='embeddings_pkey'),
    sa.UniqueConstraint('obj_ref', 'namespace', 'slot', name='uq_embeddings_obj_ns_slot')
    )
    op.create_index('uq_embeddings_ns_active_slot_one', 'embeddings', ['namespace', 'slot'], unique=False)
    op.create_index('ix_embeddings_slot', 'embeddings', ['slot'], unique=False)
    op.create_index('ix_embeddings_obj_ref', 'embeddings', ['obj_ref'], unique=False)
    op.create_index('ix_embeddings_namespace', 'embeddings', ['namespace'], unique=False)
    op.create_index('ix_embeddings_is_active', 'embeddings', ['is_active'], unique=False)
    op.create_index('ix_embeddings_deactivated_at', 'embeddings', ['deactivated_at'], unique=False)
    op.create_index('ix_embeddings_created_at', 'embeddings', ['created_at'], unique=False)
    op.drop_table('math_profiles')
    # ### end Alembic commands ###