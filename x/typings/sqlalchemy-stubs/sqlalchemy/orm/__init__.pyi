"""
Type stubs for SQLAlchemy ORM module
"""

from typing import Any, Optional, Callable, TypeVar, Generic, List
from .. import Session, Base

T = TypeVar('T')

def joinedload(*args: Any) -> Any: ...
def selectinload(*args: Any) -> Any: ...
def subqueryload(*args: Any) -> Any: ...
def contains_eager(*args: Any) -> Any: ...

class Query(Generic[T]):
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    def filter(self, *args: Any) -> 'Query[T]': ...
    def filter_by(self, **kwargs: Any) -> 'Query[T]': ...
    def first(self) -> Optional[T]: ...
    def all(self) -> List[T]: ...
    def one(self) -> T: ...
    def one_or_none(self) -> Optional[T]: ...
    def count(self) -> int: ...
    def limit(self, limit: int) -> 'Query[T]': ...
    def offset(self, offset: int) -> 'Query[T]': ...
    def order_by(self, *args: Any) -> 'Query[T]': ...

def sessionmaker(*args: Any, **kwargs: Any) -> Callable: ...

__all__ = ["Session", "Query", "joinedload", "selectinload", "subqueryload", "contains_eager", "sessionmaker"]
